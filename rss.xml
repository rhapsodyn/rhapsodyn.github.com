<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>Site_Of_R</title>
    <link>http://www.rhapsodyn.com</link>
    <description>rhapsodyn's blog</description>
    <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
    <item>
      <title>Learning Lisp</title>
      <link>http://www.rhapsodyn.com/tech/2014/07/30/learning-lisp.html</link>
      <description>&lt;blockquote&gt;
&lt;p&gt;(MEMBER `TRY `(DO DO-NOT))&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;QQ签名从&lt;code&gt;[&amp;quot;do&amp;quot;,&amp;quot;do not&amp;quot;].include? &amp;quot;try&amp;quot;&lt;/code&gt;改成了上面的，眼看今年给自己的KPI——&lt;em&gt;learning a language every year&lt;/em&gt;完成在即，心情大好。感觉自己编程功力又上升了一个小段位，下半年剩下的时间好好啃下&lt;a href=&quot;http://www.amazon.cn/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9E%84%E9%80%A0%E5%92%8C%E8%A7%A3%E9%87%8A/dp/B0011AP7RY/ref=sr_1_1?ie=UTF8&amp;amp;qid=1406723686&amp;amp;sr=8-1&amp;amp;keywords=sicp&quot;&gt;SICP&lt;/a&gt; (看亚马逊评论说中文翻译的不太好，看来又只有原版走起了)，争取能给自己打个S。&lt;/p&gt;

&lt;p&gt;Lisp，逼格最高的编程语言之一（比他逼格更高的没人出来炫耀，比他逼格低的那就太多了）。在没&lt;code&gt;TRY&lt;/code&gt;过之前，我觉得我肯定也是&lt;code&gt;DO-NOT&lt;/code&gt;了。好好看了下，发现对我们这些C语系出身的程序员来说，Lisp真心可以算的上是&lt;strong&gt;mind-blowing&lt;/strong&gt;了。极简的规则（上面那个quote已经包含了Lisp语法中所有最基本的元素了），一切都是list，而一切又都是执行（evaluating）。道生一，这似乎在哲学上更容易生出万物，也更有道法自然的感觉。&lt;/p&gt;

&lt;p&gt;对lisp理解还停留在感性层面，道的出的牛逼也只有上面这些了。&lt;/p&gt;

&lt;p&gt;Talk is cheap, show me the code。我懂，这个&lt;a href=&quot;https://github.com/rhapsodyn/SumAll&quot;&gt;repo&lt;/a&gt;里有四个版本（Lisp Javascript Ruby C#）的代码，都只在干一件事情——计算一个多层嵌套的数组的和。先只贴Lisp的版本出来：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;cl&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DEFVAR&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;*L*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DEFUN&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;SUM-ALL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;COND&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ENDP&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;NUMBERP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FIRST&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FIRST&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SUM-ALL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;REST&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SUM-ALL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FIRST&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SUM-ALL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;REST&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LIST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))))&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SUM-ALL&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;*L*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这段简单的递归能很好的体现出Lisp的表现力。平心而论，对于C#这种不支持异构数组的强类型语言来说，这对比似乎不怎么公平，因为C#版本里很大部分篇幅都用来构造数组了。而且递归这种东西好像本来就是从Lisp来的，写递归函数不就是在扬长避短么。对于你们这种怀疑我专门用特别的实例厚此薄彼的行为，我只想说，&lt;strong&gt;泥垢了&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;再次总结一下，现阶段Lisp于我来说炫酷得没朋友的特性就两点：&lt;strong&gt;极简&lt;/strong&gt;的定义&amp;amp;&amp;amp;&lt;strong&gt;自顶向下&lt;/strong&gt;的表现力。&lt;/p&gt;

&lt;p&gt;PS1:入门看的是德国某大学的Common Lisp的在线教程，整个课程的设计简直是良心，还有statistic：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/learn_lisp_statistic.png&quot; alt=&quot;learn_lisp_statistic&quot;&gt;&lt;/p&gt;

&lt;p&gt;PS2:Lisp的方言选择也是&lt;del&gt;装逼活&lt;/del&gt;门艺术，以后就用Scheme了。我又不需要practical（我的武器库很牛逼，不要惹我），Common Lisp对我来说就太大了点。&lt;/p&gt;

&lt;p&gt;SICP我来了。&lt;/p&gt;
</description>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2014/07/30/learning-lisp.html</guid>
      <dc:date>2014-07-30T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Embedding Mono</title>
      <link>http://www.rhapsodyn.com/tech/2014/07/23/embedding-mono.html</link>
      <description>&lt;p&gt;前后折腾了好几天，终于把Demo跑起来了，全部的代码见这个&lt;a href=&quot;https://github.com/rhapsodyn/EmbeddingMonoDemo&quot;&gt;repo&lt;/a&gt;，虽然行数不多，基本意思算是表达的比较清楚了（cpp里的注释都用心在写了，在我大Windows上跑起来的方法见上一篇&lt;a href=&quot;/tech/2014/07/17/why-unity3d-has-no-designer-cs.html&quot;&gt;post&lt;/a&gt;）。在天天用.NET的时期找了各种借口一直都没好好研究过hosting，这次用Mono做了个demo，算是把这个念想给圆了。&lt;/p&gt;

&lt;p&gt;嗯，念念不忘，必有回响。&lt;/p&gt;

&lt;p&gt;心得我只捡重要的，一个OL说完好了：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;学好C很重要，不看Linux &lt;del&gt;（实际上是看不懂）&lt;/del&gt;，看个ruby|mono什么的还是需要的。还是觉得#define什么的好难懂，想吐槽都不知道从何吐起。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对比unity的MonoBehavior，觉得我的&lt;a href=&quot;https://github.com/rhapsodyn/EmbeddingMonoDemo/blob/master/lib.cs&quot;&gt;Lib&lt;/a&gt;的设计更合理啊！毕竟&lt;code&gt;virtual&lt;/code&gt;不就是干这个的吗，而且，在子类写完&lt;code&gt;override&lt;/code&gt;就能出智能提示也要比光靠记忆去写&lt;code&gt;Start()&lt;/code&gt;更科学啊。unity这样设计，应该是出于简单的考虑（这性能的提升可以忽略不计吧）？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在unmanaged的环境里去找method其实跟在managed环境里用反射做的事情和做的结果都挺相似的，当然，如果有很多假设（custom code的命名方式命名规则等等），就会少了很多读metadata的麻烦事儿。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计framework/library确实比application要难得多，抽象和设计的重要性/关键性是做application比不了的。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开源就是好，你在想知道细节的时候可以去看，而不是猜。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unity studio更像是photoshop而不是visual studio，没的辩。unity用mono做script engine也就是看上了它的跨平台而已，如果ruby python什么的跨平台做的足够好，可能也轮不到mono了。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;做这个Demo感觉经验值涨了不少，不过还是要过两天用&lt;em&gt;build on mono&lt;/em&gt;的形式写个一样功能的Demo，才算圆满。&lt;/p&gt;
</description>
      <pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2014/07/23/embedding-mono.html</guid>
      <dc:date>2014-07-23T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>为啥Unity3d没xx.designer.cs</title>
      <link>http://www.rhapsodyn.com/tech/2014/07/17/why-unity3d-has-no-designer-cs.html</link>
      <description>&lt;p&gt;winform时代，在vs的designer里拖啊拖啊，总是可以自动生成一个designer.cs，够(xiang)叼(si)的话你还能自己去改designer里的代码，运气好了vs的designer还能正常的识别，然后再继续拖拖拖。&lt;/p&gt;

&lt;p&gt;unity3d的designer没有生成.cs，简直是，耍！流！氓！&lt;/p&gt;

&lt;p&gt;先猜个原因再来做点实验：&lt;/p&gt;

&lt;p&gt;前方高能预警(纯YY向)&lt;/p&gt;
</description>
      <pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2014/07/17/why-unity3d-has-no-designer-cs.html</guid>
      <dc:date>2014-07-17T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Callbacks 和(han) Promise 和 Rx*</title>
      <link>http://www.rhapsodyn.com/tech/2014/07/09/callback-promise-rx.html</link>
      <description>&lt;p&gt;想想还有几个月就去台湾了，心里还有点小激动呢，标题卖个萌。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;回头看了一下，发现自己最近几个月对callback和async这些玩意儿出奇的关心。原因无它，各种callback和async操作实在是太&lt;strong&gt;反 人 类&lt;/strong&gt;了（此处人类特指地球上某统治级灵长类生物中跟其祖先最接近的一群——程序猿，BTW，反正都扯蛋了就多扯两句：人人都知道user-friendly重要，但却没有人比微软更注重programmer-friendly，就这一点，简直要为M$点赞，以后蛋疼了一定要写一篇关于大微软爱护程序员的软文），而如何&lt;strong&gt;抽象&lt;/strong&gt;这些反人类的东西，正是计算机和编程领域里最有魅力的部分。&lt;/p&gt;
</description>
      <pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2014/07/09/callback-promise-rx.html</guid>
      <dc:date>2014-07-09T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>六月七日</title>
      <link>http://www.rhapsodyn.com/tech/2014/06/07/june-the-seven.html</link>
      <description>&lt;p&gt;写点啥&lt;/p&gt;

&lt;p&gt;正好六月七号，按高考作文的套路来——总分总，记叙文，安全牌，力保上40。&lt;/p&gt;

&lt;p&gt;总：莫忘初心，莫失匠心。&lt;/p&gt;

&lt;p&gt;分：对不住，语文老师，我要开始散文了。&lt;/p&gt;
</description>
      <pubDate>Sat, 07 Jun 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2014/06/07/june-the-seven.html</guid>
      <dc:date>2014-06-07T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>无论如何，id还是比class快</title>
      <link>http://www.rhapsodyn.com/tech/2014/03/20/id-faster-than-class.html</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://jsperf.com/queryselector-id-vs-class&quot;&gt;http://jsperf.com/queryselector-id-vs-class&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;虽然这种结论用小脚趾头想也能得出来，还是jsperf了一下，92%的slower还是挺出乎意料的，基本上就跟sql有索引和没索引的差距一样大了（其实应该原理也类似才对）&lt;/p&gt;
</description>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2014/03/20/id-faster-than-class.html</guid>
      <dc:date>2014-03-20T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>不作死就不会死——重装OS X记</title>
      <link>http://www.rhapsodyn.com/other/2014/01/24/to-die-will-die.html</link>
      <description>&lt;p&gt;不作死就不会死，简直真理。&lt;/p&gt;

&lt;p&gt;一个新的MBA，被我折腾了一天时间，直接就变成砖头了……&lt;/p&gt;
</description>
      <pubDate>Fri, 24 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2014/01/24/to-die-will-die.html</guid>
      <dc:date>2014-01-24T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Backbone.js初探</title>
      <link>http://www.rhapsodyn.com/tech/2014/01/16/exploration-of-backbone-js.html</link>
      <description>&lt;p&gt;运气不错，有时间可以研究一些新玩意，就抓起了原来一直没好好看看的Backbone（严格来说，Backbone是现在流行的MV* javascript大军里资历最老的几个了，只是对我来说是新而已）&lt;/p&gt;

&lt;p&gt;一边code一边看posts一边就开始写文章好了，前戏都省了，直接就是Pros/Cons:&lt;/p&gt;
</description>
      <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2014/01/16/exploration-of-backbone-js.html</guid>
      <dc:date>2014-01-16T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>This is the new sheet</title>
      <link>http://www.rhapsodyn.com/other/2014/01/09/this-is-the-new-sheet.html</link>
      <description>&lt;p&gt;其实应该算是2013年的流水账总结文的，在&lt;code&gt;&amp;lt; new Date(&amp;quot;2014-1-10&amp;quot;)&lt;/code&gt;的时候写下来应该还不算晚。&lt;/p&gt;
</description>
      <pubDate>Thu, 09 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2014/01/09/this-is-the-new-sheet.html</guid>
      <dc:date>2014-01-09T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Promise&amp;&amp;最具体原则&amp;&amp;sth-else</title>
      <link>http://www.rhapsodyn.com/tech/2013/12/30/promise-more-specific-rule-and-something-else.html</link>
      <description>&lt;p&gt;又是年底了，又到了各种有感而发的时候，每到这个时候，思绪都会乱到想写个文都只有起个“Promise&amp;amp;&amp;amp;最具体原则&amp;amp;&amp;amp;sth-else”这种奇葩名字了。&lt;/p&gt;

&lt;p&gt;心态好一点，少点吐槽多点思考，才是，真的。&lt;/p&gt;
</description>
      <pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/12/30/promise-more-specific-rule-and-something-else.html</guid>
      <dc:date>2013-12-30T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>回调猛于多线程</title>
      <link>http://www.rhapsodyn.com/tech/2013/12/10/callback-is-more-horrible-than-multithread.html</link>
      <description>&lt;p&gt;写的js库提供了三个API——A、B、C，单独运行的时候好好的，但是当&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;API&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;API&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;API&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;的时候，灾难就降临了。我对这个library的设计的本意是所有接口都是声明式（Declarative programming）的，但现在任意调换上面三句代码的顺序，行为竟然不一样了。更扯的是，就算是用同样是顺序调用，产生的行为也会不一样。听起来很像是多线程是吧？&lt;/p&gt;
</description>
      <pubDate>Tue, 10 Dec 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/12/10/callback-is-more-horrible-than-multithread.html</guid>
      <dc:date>2013-12-10T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>同步的ajax&amp;&amp;jquery源代码里高大上的一段</title>
      <link>http://www.rhapsodyn.com/tech/2013/11/19/sync-ajax-and-a-code-snipet-in-jquery.html</link>
      <description>&lt;h3&gt;sync-ajax&lt;/h3&gt;

&lt;p&gt;遇到的公共框架的bug（异步操作返回之前不该执行的操作执行了）想要hack一下解决，想到jquery里有这样的用法：&lt;code&gt;$.ajax(url, { async: false })&lt;/code&gt;，就跑去看jquery.ajax的源代码，看看jq是怎么block掉js执行的。ctrl+f了半天木有找到&lt;code&gt;while&lt;/code&gt;，觉weird，觉厉。开始仔细的一点一点的看源代码，还是没看到什么地方有奇怪的trick可以block js执行。&lt;/p&gt;
</description>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/11/19/sync-ajax-and-a-code-snipet-in-jquery.html</guid>
      <dc:date>2013-11-19T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>The hardest bug i've debugged</title>
      <link>http://www.rhapsodyn.com/tech/2013/11/07/the-hardest-bug-ive-debugged.html</link>
      <description>&lt;h2&gt;事出有因&lt;/h2&gt;

&lt;p&gt;全部都是看这个帖子有感&lt;a href=&quot;http://www.reddit.com/r/programming/comments/1pk14s/dave_baggetts_answer_to_programming_interviews/&quot;&gt;What&amp;#39;s the hardest bug you&amp;#39;ve debugged?&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 07 Nov 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/11/07/the-hardest-bug-ive-debugged.html</guid>
      <dc:date>2013-11-07T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>JQuery Sucks (Live版) —— 记一次20min的优化</title>
      <link>http://www.rhapsodyn.com/tech/2013/11/01/1800ms-to-18ms.html</link>
      <description>&lt;p&gt;这篇黑的有点丧心病狂了，其实问题基本上都在我自己。但光看结果的话，确实可以总结为：因为替换了一个jquery的方法调用，一下子把1.8s的执行时间优化到了18ms。&lt;/p&gt;
</description>
      <pubDate>Fri, 01 Nov 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/11/01/1800ms-to-18ms.html</guid>
      <dc:date>2013-11-01T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>JQuery Sucks (3) —— 失败的promise</title>
      <link>http://www.rhapsodyn.com/tech/2013/09/04/jquery-sucks-part3.html</link>
      <description>&lt;p&gt;崇拜这种高端黑：&lt;a href=&quot;http://domenic.me/2012/10/14/youre-missing-the-point-of-promises/&quot;&gt;http://domenic.me/2012/10/14/youre-missing-the-point-of-promises/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原本以为promise是jquery中为数不多的亮点，结果发现还是可以黑。有空了想写点demo来验证下上面那个文里的scenarios2-4是如何不成立的（或许1.10/2.0版本已经进化到可用了） &lt;/p&gt;

&lt;p&gt;BTW：咱就说&lt;a href=&quot;/tech/2013/07/26/jquery-sucks-part1.html&quot;&gt;1.8之前的promise用起来别扭&lt;/a&gt;，原来本来就是个坑啊。看来我最近的“认坑”能力有提高啊&lt;/p&gt;

&lt;p&gt;BTW2：又发现了jquery之所以有这么多槽点的一大原因——没有“Do one thing”。如果jquery专注于dom manipulation，可能不会有现在这么多槽点。不过真只专注于这一点的话，jq那不就变成了sizzle加强版了么？没有现在“Do every thing”的功能，可能jquery也就没那么火了。还真矛盾。&lt;/p&gt;
</description>
      <pubDate>Wed, 04 Sep 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/09/04/jquery-sucks-part3.html</guid>
      <dc:date>2013-09-04T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>JQuery Sucks (2) —— 一图胜千言</title>
      <link>http://www.rhapsodyn.com/tech/2013/08/22/jquery-sucks-part2.html</link>
      <description>&lt;p&gt;胜过千言以后再多说几句：其实这篇应该才是part1，起到提纲挈领之用。	&lt;/p&gt;</description>
      <pubDate>Thu, 22 Aug 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/08/22/jquery-sucks-part2.html</guid>
      <dc:date>2013-08-22T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>(function(){})()</title>
      <link>http://www.rhapsodyn.com/tech/2013/08/21/js-function-instant-invoke.html</link>
      <description>&lt;p&gt;黑JQuery的系列文章一直都还没写出来，今天读JQuery代码，反倒是多了点体会。（话说回来，JQuery的源代码可能是让我收益最多的JS代码了）&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Aug 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/08/21/js-function-instant-invoke.html</guid>
      <dc:date>2013-08-21T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>在windows上用jekyll太难了（续）</title>
      <link>http://www.rhapsodyn.com/tech/2013/08/05/jekyll-on-windows-part-two.html</link>
      <description>&lt;p&gt;这个问题前前后后折磨了我两个星期——jekyll不能正确的build出&lt;strong&gt;ol&lt;/strong&gt;（md to html），作为一个强迫症患者，我当然无法容忍在markdown的文档中手写&lt;code&gt;&amp;lt;ol&amp;gt;&amp;lt;/ol&amp;gt;&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;于是，到jekyll的github respository去提了个issue，热心的程序猿朋友礼貌地指出：这不是jekyll的issue，应该是markdown引擎的问题。&lt;/p&gt;

&lt;p&gt;jekyll的默认markdown引擎是&lt;code&gt;maruku&lt;/code&gt;，今天终于有时间了，开始一步一步的debug maruku。前前后后可能搞了40min，发现所有问题都出在这一句：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:olist&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^[ ]{0,1}\d+\..*\w+/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;那个神奇的正则表达式，不能match&lt;code&gt;1. 中文&lt;/code&gt;…………&lt;/p&gt;

&lt;p&gt;算了，碰到正则表达式，果断的绕道了。&lt;/p&gt;

&lt;p&gt;在jekyll的config中把markdown引擎改为&lt;code&gt;redcarpet&lt;/code&gt;，问题解决！&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;中&lt;/li&gt;
&lt;li&gt;文 &lt;/li&gt;
&lt;li&gt;可&lt;/li&gt;
&lt;li&gt;以&lt;/li&gt;
&lt;li&gt;用&lt;/li&gt;
&lt;li&gt;了&lt;/li&gt;
&lt;/ol&gt;
</description>
      <pubDate>Mon, 05 Aug 2013 20:20:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/08/05/jekyll-on-windows-part-two.html</guid>
      <dc:date>2013-08-05T20:20:00+00:00</dc:date>
    </item>
    <item>
      <title>CPU Cache</title>
      <link>http://www.rhapsodyn.com/tech/2013/07/30/cpu-cache.html</link>
      <description>&lt;p&gt;看文 &lt;a href=&quot;http://coolshell.cn/articles/10249.html&quot;&gt;7个示例科普CPU Cache&lt;/a&gt; 有感：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;当有循环存在时，循环的次数才是&lt;strong&gt;最&lt;/strong&gt;关键的而不是循环里的操作（如果操作已经足够简单）&lt;/li&gt;
&lt;li&gt;循环体内的代码肯定还是越简单越好，这次是多了理性的认识&lt;/li&gt;
&lt;li&gt;只要你想，总是有优化空间的&lt;/li&gt;
&lt;/ol&gt;
</description>
      <pubDate>Tue, 30 Jul 2013 14:20:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/07/30/cpu-cache.html</guid>
      <dc:date>2013-07-30T14:20:00+00:00</dc:date>
    </item>
    <item>
      <title>JQuery Sucks (1) —— 无节操接口升级</title>
      <link>http://www.rhapsodyn.com/tech/2013/07/15/jquery-sucks-part1.html</link>
      <description>&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/service/double&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;你以为上面那段代码会输出&lt;code&gt;8&lt;/code&gt;是吗？我也这样以为，遗憾的是，只有JQuery1.8以后的版本才会满足你的期待。而1.8以前的版本，只会输出&lt;code&gt;2&lt;/code&gt;。&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Jul 2013 20:10:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/07/15/jquery-sucks-part1.html</guid>
      <dc:date>2013-07-15T20:10:00+00:00</dc:date>
    </item>
    <item>
      <title>WP文章导入完成</title>
      <link>http://www.rhapsodyn.com/other/2013/07/15/finish-importing-from-wp.html</link>
      <description>&lt;p&gt;用&lt;code&gt;jekyll-import&lt;/code&gt;把文章都import过来了，结果基本满意&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;wordpress里用的geshi那个插件，现在代码的显示都不正常了&lt;/li&gt;
&lt;li&gt;categories导入的有问题，多个分类的都不能build出正确的链接&lt;/li&gt;
&lt;li&gt;图片的问题还没解决（这个写个脚本刷链接应该就可以了）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;想写个脚本一次刷好这两个issue，考虑了1分钟，决定还是手动修改，可以顺便复习下以前写过的东西还感觉挺好的。
周末有空慢慢改吧。&lt;/p&gt;

&lt;p&gt;PS：原来两年才写了不到70篇文，我太弱了&lt;/p&gt;
</description>
      <pubDate>Mon, 15 Jul 2013 20:10:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2013/07/15/finish-importing-from-wp.html</guid>
      <dc:date>2013-07-15T20:10:00+00:00</dc:date>
    </item>
    <item>
      <title>两个CSS的坑</title>
      <link>http://www.rhapsodyn.com/tech/2013/07/10/two-css-puzzle.html</link>
      <description>&lt;p&gt;突然又觉得说是坑有点太过了，定位为trick应该比较合适&lt;/p&gt;
</description>
      <pubDate>Wed, 10 Jul 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/07/10/two-css-puzzle.html</guid>
      <dc:date>2013-07-10T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>在windows上用jekyll太难了</title>
      <link>http://www.rhapsodyn.com/tech/2013/07/07/jekyll-on-windows.html</link>
      <description>&lt;p&gt;研究了一下午，结果发现跟所有linux产品的windows移植（or阉割）版一样：想要用jekyll，就免不了——&lt;strong&gt;折腾&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;整个折腾过程如下：
1. 安装jekyll（废话）
2. 一来就遇到个编码的问题，google了半天还是stackoverflow靠谱，环境变量里改一下就可以解决了：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;powershell&quot;&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en_US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UTF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;8&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LANG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en_US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UTF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;8&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;为了格式化上面那段代码又产生了另一个蛋疼的问题：&lt;a href=&quot;https://github.com/mojombo/jekyll/issues/1182&quot;&gt;jekyll依赖于python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;然后就是最新的pygments竟然有&lt;a href=&quot;http://stackoverflow.com/questions/17364028/jekyll-on-windows-pygments-not-working&quot;&gt;BUG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;终于折腾完毕，终于可以在我大windows上调试了&lt;/li&gt;
&lt;/ol&gt;
</description>
      <pubDate>Sun, 07 Jul 2013 21:10:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/07/07/jekyll-on-windows.html</guid>
      <dc:date>2013-07-07T21:10:00+00:00</dc:date>
    </item>
    <item>
      <title>hello new blog</title>
      <link>http://www.rhapsodyn.com/other/2013/07/07/hello-new-blog.html</link>
      <description>&lt;p&gt;一是因为国内的VPS都挺坑的，二是觉得还是要写点东西(总不能用QQ空间吧……)
下定决心还是不再继续租VPS了，把所有博文转过来(一是原来的blog本来就没流量，也不在乎评论。二是用github装逼犯儿更足)&lt;/p&gt;

&lt;p&gt;deadline：7月26&lt;/p&gt;

&lt;p&gt;开始研究jekyll&lt;/p&gt;
</description>
      <pubDate>Sun, 07 Jul 2013 17:36:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2013/07/07/hello-new-blog.html</guid>
      <dc:date>2013-07-07T17:36:00+00:00</dc:date>
    </item>
    <item>
      <title>坑爹的ASP.Net MVC3 RedirectResult</title>
      <link>http://www.rhapsodyn.com/tech/2013/04/01/suck-asp-net-mvc3-redirectresult.html</link>
      <description>&lt;p&gt;他代码是这样写的：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;csharp&quot;&gt;&lt;span class=&quot;na&quot;&gt;[SuppressMessage(&amp;quot;Microsoft.Design&amp;quot;, &amp;quot;CA1054:UriParametersShouldNotBeStrings&amp;quot;, MessageId = &amp;quot;0#&amp;quot;, &lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Justification = &amp;quot;Response.Redirect() takes its URI as a string parameter.&amp;quot;)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RedirectResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permanent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ArgumentException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MvcResources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Common_NullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Permanent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permanent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后metadata里的注释写的是：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;csharp&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Summary:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     Initializes a new instance of the System.Web.Mvc.RedirectResult class.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Parameters:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   url:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     The target URL.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Exceptions:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   System.ArgumentNullException:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     The url parameter is null.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RedirectResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;我就呵呵了，不是说好的只有在url是null的时候抛ArgumentNullException么，为啥连&lt;code&gt;string.Empty&lt;/code&gt;也抛？&lt;/p&gt;
</description>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/04/01/suck-asp-net-mvc3-redirectresult.html</guid>
      <dc:date>2013-04-01T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>.Net中DateTime的大坑</title>
      <link>http://www.rhapsodyn.com/tech/2013/02/26/net%25e4%25b8%25addatetime%25e7%259a%2584%25e5%25a4%25a7%25e5%259d%2591.html</link>
      <description>&lt;p&gt;Long story in short：当使用&lt;code&gt;JavaScriptSerializer&lt;/code&gt;去序列化一个&lt;code&gt;DateTime&lt;/code&gt;值的时候，如果这个值的&lt;code&gt;Kind&lt;/code&gt;是&lt;code&gt;unspecified&lt;/code&gt;，则会根据&lt;code&gt;Timezone&lt;/code&gt;去序列化&lt;code&gt;DateTime&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这就包含了一个隐含的BUG：如果&lt;code&gt;DateTime&lt;/code&gt;做了持久化操作在还原时，比如从String “2013-3-1 12:00:00”中初始化&lt;code&gt;DateTime&lt;/code&gt;的时候，不会有Kind。此时如果在用&lt;code&gt;JavaScriptSerializer&lt;/code&gt;去序列化，则有可能得到的result是“2013-3-1 12:00:00” +- N&lt;/p&gt;

&lt;p&gt;顺手吐槽：有源代码就是好，开始就误解Asp.Net MVC3了，原以为&lt;code&gt;Json Response&lt;/code&gt;有啥特别的处理，结果发现只是一句简单的&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;JavaScriptSerializer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serializer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JavaScriptSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
      <pubDate>Tue, 26 Feb 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/02/26/net%25e4%25b8%25addatetime%25e7%259a%2584%25e5%25a4%25a7%25e5%259d%2591.html</guid>
      <dc:date>2013-02-26T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>七周七语言读后感</title>
      <link>http://www.rhapsodyn.com/tech/2013/02/08/%25e4%25b8%2583%25e5%2591%25a8%25e4%25b8%2583%25e8%25af%25ad%25e8%25a8%2580%25e8%25af%25bb%25e5%2590%258e%25e6%2584%259f.html</link>
      <description>&lt;h3&gt;Gains[0]&lt;/h3&gt;

&lt;p&gt;得Jolt奖的书都很NB，毋庸置疑。只算是比较认真的读了一遍，书中的自习题都没做过（估计做了就真要用七周了），周末断断续续在读，被喷了好几次zhuangbility了（去满记甜品也在看、starbucks也在看），用了N周总算是看完了。&lt;/p&gt;

&lt;p&gt;作者也很NB，不但能玩转这么多种语言，而且还能直接找到好几种语言的作者直接交流，段位略高。书中对每种语言的介绍也很厉害，从语法基础到核心竞争力再到drawback一气呵成，所以基本上每种语言都可以流畅的在两个小时左右读完。&lt;/p&gt;

&lt;p&gt;写书厉害的大牛才是真大牛，反过来，如果你不能很好的表达你对技术的理解，那么你一定不是真大牛&lt;/p&gt;
</description>
      <pubDate>Fri, 08 Feb 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/02/08/%25e4%25b8%2583%25e5%2591%25a8%25e4%25b8%2583%25e8%25af%25ad%25e8%25a8%2580%25e8%25af%25bb%25e5%2590%258e%25e6%2584%259f.html</guid>
      <dc:date>2013-02-08T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Browser Cache</title>
      <link>http://www.rhapsodyn.com/tech/2013/01/24/browser-cache.html</link>
      <description>&lt;h3&gt;先说结论：&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Google最牛逼。&lt;/li&gt;
&lt;li&gt;利用浏览器缓存的最佳实践是：
让response header里的Cache-Control：max-age=天长地久 
给每个静态资源打上fingerprint（有proxy挡在前面就用改文件名，没proxy改querystring就够了）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;再来开始扯&lt;/strong&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 24 Jan 2013 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2013/01/24/browser-cache.html</guid>
      <dc:date>2013-01-24T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>同步的Jsonp == shit</title>
      <link>http://www.rhapsodyn.com/other/2012/11/17/%25e5%2590%258c%25e6%25ad%25a5%25e7%259a%2584jsonp-shit.html</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/631609/ajax-synchronous-callbacks&quot;&gt;http://stackoverflow.com/questions/631609/ajax-synchronous-callbacks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上面的那个SO的帖子里解释的很清楚了，反思一下，有时候真心有点异想天开了，jsonp本来就是一个script tag的hack，哪有可能像真的ajax请求一样做到很多事情&lt;/p&gt;

&lt;p&gt;BTW：jquery中的async:false还木有怎么看懂，都怪1.5以后的$.ajax改了很多还和deferred关联到一起了——&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// if we&amp;#39;re in sync mode or it&amp;#39;s in cache&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// and has been retrieved directly (IE6 &amp;amp;amp; IE7)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// we need to manually fire the callback&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;handle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhrId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhrOnUnloadAbort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Create the active xhrs callbacks list if needed&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// and attach the unload handler&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhrCallbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;xhrCallbacks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhrOnUnloadAbort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Add to list of active xhrs callbacks&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;xhrCallbacks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;本来想吐槽一下jquery的，明明&lt;code&gt;$.ajax({jsonp:&amp;quot;callback&amp;quot;,async:false});&lt;/code&gt;
就是个错误的调用方式（伪命题），为何还要允许这种方式存在？&lt;/p&gt;

&lt;p&gt;不过一想到jquery本来就是个&lt;strong&gt;javascript&lt;/strong&gt;的库，心下也就释然了。&lt;/p&gt;
</description>
      <pubDate>Sat, 17 Nov 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2012/11/17/%25e5%2590%258c%25e6%25ad%25a5%25e7%259a%2584jsonp-shit.html</guid>
      <dc:date>2012-11-17T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>通用设计原则：除非已经完备，不要提交数据。</title>
      <link>http://www.rhapsodyn.com/tech/2012/11/12/commit-after-everything-ok.html</link>
      <description>&lt;p&gt;难得能在周一早上来这么早的。&lt;/p&gt;

&lt;p&gt;难得在周一早上能看到这么有营养的东西：&lt;a href=&quot;http://news.cnblogs.com/n/162954/&quot;&gt;http://news.cnblogs.com/n/162954/&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 12 Nov 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/11/12/commit-after-everything-ok.html</guid>
      <dc:date>2012-11-12T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>速记_From121015_To121107</title>
      <link>http://www.rhapsodyn.com/tech/2012/10/22/%25e9%2580%259f%25e8%25ae%25b0_from1015_to1022.html</link>
      <description>&lt;del&gt;先写标题&lt;/del&gt;

&lt;p&gt;再编辑的时候已经过了两个星期了。。&lt;/p&gt;

&lt;h3&gt;透明&lt;/h3&gt;

&lt;p&gt;跟其他部门打交道时的体会——A调用B，B再去调用C帮A完成某些操作，如果A反而感觉不到B（或者是忽略了B）的存在，其实也是一种挺厉害的设计的。好像说的有点抽象，说白了就是如果可以让customer忽略掉了中间过程的存在，可能会使问题更加清晰和简单。再白一点：化简中间过程，隐藏非主要逻辑。上升到哲学的高度就是——程序就是输入变输出。&lt;/p&gt;

&lt;h3&gt;弱类型的致命伤&lt;/h3&gt;

&lt;p&gt;不可靠什么都是坑爹的，用的好的话，javascript这种渣语言都能写操作系统呢！虽然可能是偏激了些，但就我感觉弱类型最致命的还是intellicense不好做啊（比方说function的参数就没法&lt;strong&gt;点&lt;/strong&gt;出东西来），编程体验有些差劲（其实也可以理解为不可靠好像）。&lt;/p&gt;

&lt;h3&gt;好记性不如烂笔头&lt;/h3&gt;

&lt;p&gt;真理啊，我还想到个啥来着，直接就忘了。。。 看来还是至少要记个标题啊&lt;/p&gt;
</description>
      <pubDate>Mon, 22 Oct 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/10/22/%25e9%2580%259f%25e8%25ae%25b0_from1015_to1022.html</guid>
      <dc:date>2012-10-22T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>速记_From121001_To121010</title>
      <link>http://www.rhapsodyn.com/tech/2012/10/10/%25e9%2580%259f%25e8%25ae%25b0from121001to121010.html</link>
      <description>&lt;p&gt;吐槽先：尼玛的还是成都好啊&lt;/p&gt;

&lt;h3&gt;Fn() Fn.call Fn.apply&lt;/h3&gt;

&lt;p&gt;吐槽+感悟：想要NB，还是要造轮子。&lt;/p&gt;

&lt;p&gt;javascript实现callback的三种方式：fn()最直白；call能让你用this用的爽；apply不但能顾及this，还能让arguments也爽。&lt;/p&gt;

&lt;p&gt;最后我还是用的fn()，无他，但KISS耳。&lt;/p&gt;

&lt;h3&gt;耍花枪&lt;/h3&gt;

&lt;p&gt;跟某牛K交流时感悟到的东西：既然程序员又名“搞技术的”，肯定是爱玩些新技术的，但玩火玩过了肯定是要烧身的。把控力是其一：你不一定有足够的能力把新技术真正的玩转（虽然你以为||他告诉你很简单）；可维护性是其二：你天资聪慧自诩天下第一，难免接手的人不是路人甲&lt;/p&gt;

&lt;h3&gt;JSLint&lt;/h3&gt;

&lt;p&gt;还挺好用，但是这个问题：&lt;a href=&quot;http://stackoverflow.com/questions/1450721/solution-for-jslint-errors&quot;&gt;http://stackoverflow.com/questions/1450721/solution-for-jslint-errors&lt;/a&gt; 有点蛋疼&lt;/p&gt;
</description>
      <pubDate>Wed, 10 Oct 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/10/10/%25e9%2580%259f%25e8%25ae%25b0from121001to121010.html</guid>
      <dc:date>2012-10-10T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>速记_From120917_To120927</title>
      <link>http://www.rhapsodyn.com/other/tech/2012/09/27/%25e9%2580%259f%25e8%25ae%25b0from120917to120927.html</link>
      <description>&lt;p&gt;尼玛的，明年8月count一下字数，一年不够10000字的话就拿服务器和域名的钱吃饭了。&lt;/p&gt;

&lt;h3&gt;上层保护下层，下层不相信上层&lt;/h3&gt;

&lt;p&gt;听个培训的时候听到的，本来是指服务器之间请求和调用的保护，防止系统雪崩的。联系到防御式编程，什么参数检查之类的code，肯定是越早越好，BUT，下层的实现，应该还是Defence First的&lt;/p&gt;

&lt;h3&gt;为啥Windows不给力&lt;/h3&gt;

&lt;p&gt;越来越有感觉，在不考虑一些成本，足够YY的前提下——Linux：U can do whatever you want &lt;strong&gt;VS&lt;/strong&gt; Windows：U can do whatever Windows want you do。到一定程度的时候，比如需要自己定制操作系统或者是服务器的时候，Windows就会完全无力了&lt;/p&gt;

&lt;h3&gt;Talk is cheap，show me the code&lt;/h3&gt;

&lt;p&gt;Linus大神说的绝对没错，code first（做demo在前）绝对比仔仔细细读完所有书和文档有效率的多&lt;/p&gt;

&lt;h3&gt;Do One Thing&lt;/h3&gt;

&lt;p&gt;似乎是Unix设计理念里提到的东西，真的NB的东西就只是把Do One Thing这件事情做到了极致而已。比如我现在隐隐觉得自己前端水平有点见长的趋势了，就是因为我能感知到一些东西的One Thing了——jQuery就只是sizzle的加强版；Knockoutjs——提供映射，绑定dom和javascript的对象；underscore——补全javascript的util函数；sammyjs——浏览器路由。&lt;/p&gt;

&lt;p&gt;好吧，我就是这样用他们的。&lt;/p&gt;

&lt;h3&gt;DRY KISS&lt;/h3&gt;

&lt;p&gt;干吻在手，天下我有。&lt;/p&gt;

&lt;p&gt;真能做到这两大原则了，也就无敌了&lt;/p&gt;
</description>
      <pubDate>Thu, 27 Sep 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/tech/2012/09/27/%25e9%2580%259f%25e8%25ae%25b0from120917to120927.html</guid>
      <dc:date>2012-09-27T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>About Tuning</title>
      <link>http://www.rhapsodyn.com/tech/2012/07/11/about-tuning.html</link>
      <description>&lt;p&gt;&lt;strong&gt;--edit：&lt;/strong&gt;想了一下还是多加点东西写成个UL吧，正式开始工作也一年了，写个几千字的长文不太可能，就稍微多记点东西充数吧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;介于我还是太菜！心得只有一句话：你觉得perf没问题的地方——可能会有问题；你自己都觉得有问题的地方——一定有问题！&lt;/li&gt;
&lt;li&gt;我真的太尼玛菜了！数据库的字段浪费太严重了，各种nvarchar(200)起码浪费180&lt;/li&gt;
&lt;li&gt;彩笔我是！想了半年了，单元测试还是没写起来，到12月为止，再不写unittest就不买新PC了&lt;/li&gt;
&lt;li&gt;菜比！做一堆垃圾操作，明明是DB=&amp;gt;DB就完事的，非要从DB=&amp;gt;APP=&amp;gt;APP=&amp;gt;DB，还多select一堆不需要的column浪费带宽。不要求perf就不去管perf了吗？&lt;/li&gt;
&lt;li&gt;但是彩笔不会迷信大神！这段可能略长，我就再多一个p&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大神经常会告诉凡人各种Best Practice，类似于写JS都用===不用==，记下来了并且常常实践肯定没错。但是如果不知道===是为了&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;避免cast的消耗&lt;/li&gt;
&lt;li&gt;可能会有潜在的BUG的话，&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;那彩笔永远也变不了大神，永远也不能写Best Practice给人家看的。（我自己的BP就是——如果不是大循环，我都用==的，一来不熟JS的人看了我代码不会疑惑、至少减少了一次baidu的耗时，二来有时候我并不要求精确，我就是需要implicit cast）&lt;/p&gt;
</description>
      <pubDate>Wed, 11 Jul 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/07/11/about-tuning.html</guid>
      <dc:date>2012-07-11T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>水</title>
      <link>http://www.rhapsodyn.com/other/2012/06/10/%25e6%25b0%25b4.html</link>
      <description>&lt;p&gt;天下之水。&lt;/p&gt;
</description>
      <pubDate>Sun, 10 Jun 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2012/06/10/%25e6%25b0%25b4.html</guid>
      <dc:date>2012-06-10T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>长文章实在没时间（没动力）写出来，好痛苦</title>
      <link>http://www.rhapsodyn.com/tech/2012/05/31/too-much-to-write.html</link>
      <description>&lt;p&gt;只有像写tweet一样写：&lt;/p&gt;

&lt;h4&gt;Log4Net文件名Trick（paranoid向）&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10798985/log4net-rollingfileappender-filename-just-with-datetime&quot;&gt;http://stackoverflow.com/questions/10798985/log4net-rollingfileappender-filename-just-with-datetime&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Stringbuilder的Clear&lt;/h3&gt;

&lt;p&gt;在 &amp;lt;= .Net3.5 的时候用sb.Length = 0 来代替sb.Clear()感觉最好了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.yy606.com/upload/images/wbpic/2012051123251053520.jpg&quot; alt=&quot;联萌&quot;&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 31 May 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/05/31/too-much-to-write.html</guid>
      <dc:date>2012-05-31T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>expressjs完全超详细入门之纯吐槽</title>
      <link>http://www.rhapsodyn.com/tech/2012/05/08/%25e7%25ba%25af%25e5%2590%2590%25e6%25a7%25bd.html</link>
      <description>&lt;p&gt;&lt;img src=&quot;/assets/images/expressjs.png&quot; alt=&quot;express&quot;&gt;&lt;/p&gt;

&lt;p&gt;尼玛的上流！&lt;/p&gt;
</description>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/05/08/%25e7%25ba%25af%25e5%2590%2590%25e6%25a7%25bd.html</guid>
      <dc:date>2012-05-08T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>好久不吐槽</title>
      <link>http://www.rhapsodyn.com/tech/2012/04/17/%25e5%25a5%25bd%25e4%25b9%2585%25e4%25b8%258d%25e5%2590%2590%25e6%25a7%25bd.html</link>
      <description>&lt;p&gt;好久不吐槽。。&lt;/p&gt;

&lt;p&gt;一是因为最近没啥吐槽点，二来吐槽点不够吐&lt;/p&gt;

&lt;p&gt;今天搞WCF的时候遇到个问题，一下子就把我点燃了：&lt;a href=&quot;http://www.cnblogs.com/smithliu/archive/2010/02/10/1667124.html&quot;&gt;http://www.cnblogs.com/smithliu/archive/2010/02/10/1667124.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;想了半天愣是没想到为啥空格是必须的&lt;/p&gt;
</description>
      <pubDate>Tue, 17 Apr 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/04/17/%25e5%25a5%25bd%25e4%25b9%2585%25e4%25b8%258d%25e5%2590%2590%25e6%25a7%25bd.html</guid>
      <dc:date>2012-04-17T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>I came, I guess, I try !!</title>
      <link>http://www.rhapsodyn.com/tech/2012/03/12/i-came-i-guess-i-try.html</link>
      <description>&lt;p&gt;用nodejs+mongodb+jquery.autocomplete自己捣鼓了个suggestion。&lt;/p&gt;

&lt;p&gt;X疼和不解的是为什么明明是连localhost有9ms的receiving-time，而访问某些远程的资源反而&amp;lt;9ms，那个receiving-time到底是个啥东西？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/QQ1.png&quot; alt=&quot;capture1&quot;&gt;&lt;/p&gt;

&lt;p&gt;想了半天，似乎不是资源大小的问题、也该不是tcp链接快慢的问题。&lt;/p&gt;

&lt;p&gt;嗯，have a try：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/QQ2.png&quot; alt=&quot;capture2&quot;&gt;&lt;/p&gt;

&lt;p&gt;成就感什么的跃然之上啊！！&lt;/p&gt;
</description>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/03/12/i-came-i-guess-i-try.html</guid>
      <dc:date>2012-03-12T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>JavaScript getMonth() 方法</title>
      <link>http://www.rhapsodyn.com/tech/2012/02/20/389.html</link>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定义和用法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;getMonth() 方法可返回表示月份的数字。&lt;/p&gt;

&lt;p&gt;语法 dateObject.getMonth()&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;返回值&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;dateObject 的月份字段，使用本地时间。返回值是 0（一月） 到 11（十二月） 之间的一个整数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这尼玛是谁设计的API，碉堡了！！！！&lt;a href=&quot;http://www.16xh.com/duanxiaohua/201103/993.html&quot;&gt;西瓜的笑话&lt;/a&gt; 的果然是毫无夸张成分的啊！！！&lt;/p&gt;
</description>
      <pubDate>Mon, 20 Feb 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/02/20/389.html</guid>
      <dc:date>2012-02-20T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>function(window,undefined)</title>
      <link>http://www.rhapsodyn.com/tech/2012/02/14/functionwindowundefined.html</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/gamewyd/article/details/7049606&quot;&gt;http://blog.csdn.net/gamewyd/article/details/7049606&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个trick略强啊。。越来越觉得jquery碉堡了&lt;/p&gt;
</description>
      <pubDate>Tue, 14 Feb 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/02/14/functionwindowundefined.html</guid>
      <dc:date>2012-02-14T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>netsh</title>
      <link>http://www.rhapsodyn.com/tech/2012/02/10/netsh.html</link>
      <description>&lt;p&gt;第一用到这个东西，主要是有条命令解决了我长久以来的疑惑，怎么看iis缓存了什么东西：
&lt;code&gt;netsh http show cache&lt;/code&gt;
效果如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;C:\Users\tassadarliu&amp;gt;netsh http show cache&lt;/p&gt;

&lt;h2&gt;HTTP 响应缓存快照:&lt;/h2&gt;

&lt;p&gt;URL: http://localhost:80/courseware/s.txt&lt;br&gt;
状态代码: 200&lt;br&gt;
HTTP 谓词: GET&lt;br&gt;
缓存策略类型: 生存时间&lt;br&gt;
缓存项生存时间(秒): 1000&lt;br&gt;
创建时间: 2012.2.9:7.44.3:0&lt;br&gt;
请求队列名称: DefaultAppPool&lt;br&gt;
内容类型: text/plain&lt;br&gt;
内容编码: (null)&lt;br&gt;
标头长度: 236&lt;br&gt;
内容长度: 21844&lt;br&gt;
单击次数: 2&lt;br&gt;
服务后强制断开连接: FALSE  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后，本着good good study的原则，想一路/?下来仔细研究一下netsh命令，结果：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;C:\Users\tassadarliu&amp;gt;netsh&lt;/p&gt;

&lt;p&gt;netsh&amp;gt;http&lt;/p&gt;

&lt;p&gt;netsh http&amp;gt;show /?&lt;/p&gt;

&lt;p&gt;下列指令有效:&lt;/p&gt;

&lt;p&gt;命令从 netsh 上下文继承:&lt;/p&gt;

&lt;p&gt;show alias     - 列出所有定义的别名。&lt;br&gt;
show helper    - 请列出所有顶层的帮助者。&lt;br&gt;
show mode      - 显示当前的模式。   &lt;/p&gt;

&lt;p&gt;此上下文中的命令:&lt;br&gt;
show cacheparam - 显示 HTTP 服务的缓存参数。&lt;br&gt;
show cachestate - 列出缓存的 URI 资源及其相关属性。&lt;br&gt;
show iplisten  - 显示 IP 侦听列表中的所有 IP 地址。&lt;br&gt;
show servicestate - 显示 HTTP 服务快照。&lt;br&gt;
show sslcert   - 显示 IP 地址和端口的 SSL 证书绑定。&lt;br&gt;
show timeout   - 显示服务的超时值。&lt;br&gt;
show urlacl    - 显示 URL 命名空间保留项。   &lt;/p&gt;

&lt;p&gt;netsh http&amp;gt;   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;简直不坑爹！！ 这你妹的根本就没&lt;code&gt;netsh http show cache&lt;/code&gt;这个指令啊。。&lt;/p&gt;

&lt;p&gt;M$你真应该在中国卖Lumia送xbox来拯救我对你逐渐丧失的好感了！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS1：&lt;/strong&gt;在win7以前，netsh好像看不了http，看文档netsh wins server应该是差不多的效果，结果loading某个dll的时候failed的&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS2：&lt;/strong&gt;Hit count翻译成点击次数，M$你是请的临时工做得本地化吗？？！&lt;/p&gt;
</description>
      <pubDate>Fri, 10 Feb 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/02/10/netsh.html</guid>
      <dc:date>2012-02-10T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>SO再现神贴</title>
      <link>http://www.rhapsodyn.com/tech/2012/01/31/so%25e5%2586%258d%25e7%258e%25b0%25e7%25a5%259e%25e8%25b4%25b4.html</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/8928403/try-catch-speeding-up-my-code&quot;&gt;http://stackoverflow.com/questions/8928403/try-catch-speeding-up-my-code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;为什么帝国主义的程序员可以“蛋疼”到这种地步的&lt;/p&gt;
</description>
      <pubDate>Tue, 31 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/01/31/so%25e5%2586%258d%25e7%258e%25b0%25e7%25a5%259e%25e8%25b4%25b4.html</guid>
      <dc:date>2012-01-31T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>人生就是不停的战斗</title>
      <link>http://www.rhapsodyn.com/other/2012/01/31/%25e4%25ba%25ba%25e7%2594%259f%25e5%25b0%25b1%25e6%2598%25af%25e4%25b8%258d%25e5%2581%259c%25e7%259a%2584%25e6%2588%2598%25e6%2596%2597.html</link>
      <description>&lt;p&gt;见了很多朋友。&lt;/p&gt;

&lt;p&gt;然后。&lt;/p&gt;

&lt;p&gt;人生就是不停的战斗口牙&lt;/p&gt;
</description>
      <pubDate>Tue, 31 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2012/01/31/%25e4%25ba%25ba%25e7%2594%259f%25e5%25b0%25b1%25e6%2598%25af%25e4%25b8%258d%25e5%2581%259c%25e7%259a%2584%25e6%2588%2598%25e6%2596%2597.html</guid>
      <dc:date>2012-01-31T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>javascript parseInt（）</title>
      <link>http://www.rhapsodyn.com/tech/2012/01/11/javascript-parseint%25ef%25bc%2588%25ef%25bc%2589.html</link>
      <description>&lt;p&gt;神了个奇的~&lt;br&gt;
无缘无故的搞个8进制搞毛啊&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/rhapsodyn/82zqg/&quot;&gt;http://jsfiddle.net/rhapsodyn/82zqg/&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 11 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/01/11/javascript-parseint%25ef%25bc%2588%25ef%25bc%2589.html</guid>
      <dc:date>2012-01-11T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>C#是个好同志</title>
      <link>http://www.rhapsodyn.com/tech/2012/01/09/c%25e6%2598%25af%25e4%25b8%25aa%25e5%25a5%25bd%25e5%2590%258c%25e5%25bf%2597.html</link>
      <description>&lt;p&gt;2011的年末总结文又被压倒DraftStack里了，出得来出不来还是个未知数。&lt;/p&gt;

&lt;p&gt;还是写点短的比较可靠，因为不会入栈。&lt;/p&gt;

&lt;p&gt;大牛说过：单纯的说java比c++好、c#比java好，是没有意义的，因为任何语言都有它的应用场景。换句话说：想用好一种语言，就是要了解该用成什么style。sql就是要做查插删改为了1ms的加速多想10000s、javascript就是要用出弱类型+函数式+伪面向对象的感觉、用C写代码必须geek必须让人看起来有很厉害的的样子。&lt;/p&gt;

&lt;p&gt;而要用好C#，你只要懒就好了，因为他不存在什么语言局限性，你不需要hack跟trick。&lt;/p&gt;

&lt;p&gt;因为C#什么都会：弱类型——哥有var有dynamic；函数式——哥有function有lambda；面向对象——哥笑了。&lt;/p&gt;

&lt;p&gt;sql你总不会了吧——哥还真会，因为哥有linq。&lt;/p&gt;

&lt;p&gt;以前真是小看了linq——今天遇到了个问题，需要比对新旧两个数组，新的比旧的的多了需要添、少了需要删、没变的肯定不能动——用了linq，生活就是如此简单：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toBeAdded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oldArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toBeDeleted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
      <pubDate>Mon, 09 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2012/01/09/c%25e6%2598%25af%25e4%25b8%25aa%25e5%25a5%25bd%25e5%2590%258c%25e5%25bf%2597.html</guid>
      <dc:date>2012-01-09T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Fxxk L.A！！！！</title>
      <link>http://www.rhapsodyn.com/ball/2011/12/27/fxxk-l-a%25ef%25bc%2581%25ef%25bc%2581%25ef%25bc%2581%25ef%25bc%2581.html</link>
      <description>&lt;del&gt;我的球迷生涯这么快就到头了？&lt;/del&gt;

&lt;p&gt;怀疑你妹啊怀疑！是哪个魂淡性奋的几个月来中午第三次没睡着的！&lt;/p&gt;

&lt;p&gt;BEAT LA！！ FIGHTING！！&lt;/p&gt;
</description>
      <pubDate>Tue, 27 Dec 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/ball/2011/12/27/fxxk-l-a%25ef%25bc%2581%25ef%25bc%2581%25ef%25bc%2581%25ef%25bc%2581.html</guid>
      <dc:date>2011-12-27T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>首战观后感</title>
      <link>http://www.rhapsodyn.com/ball/2011/12/27/%25e9%25a6%2596%25e6%2588%2598%25e8%25a7%2582%25e5%2590%258e%25e6%2584%259f.html</link>
      <description>&lt;p&gt;一边看一边写。&lt;/p&gt;

&lt;p&gt;虽然我知道这赛季到最后肯定还是乐透的下场，神马“有起色”“要雄起”“return of THE kings”全都是幻觉和浮云，但头两场还是忍不住要小兴奋一下，特别是遇到赢了渣湖这种大喜事！&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;后场篮板以后出球和推快攻利落了不少，原因竟然是引进了在adelman手下练出来的海爷，你感信？&lt;/li&gt;
    &lt;li&gt;还是海爷，如果JT的挡拆能有海爷的质量，就、好、了&lt;/li&gt;
    &lt;li&gt;鱼总运球绊倒好有喜感&lt;/li&gt;
    &lt;li&gt;索顿长得越来越喜感&lt;/li&gt;
    &lt;li&gt;还是波波维奇的大胡子好看点&lt;/li&gt;
    &lt;li&gt;还是打得很shi 只是今天湖人更shi&lt;/li&gt;
    &lt;li&gt;完全变成艾比队了。。&lt;/li&gt;
    &lt;li&gt;表妹和TE：TE状态有起色、表妹智商略微成长&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，引用：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;考辛斯太招人爱了……6个前场篮板和禁区一座肉山之类都不算亮点，造科比进攻犯规之后学鲨鱼霸王步一
路扭胯出去，脸笑得炸开跟披萨饼似的，一会儿换他下场，满脸怨恼闷怒像小孩子被抢了糖要哭出来的样&amp;gt;子。光为这些都值回票价了。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <pubDate>Tue, 27 Dec 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/ball/2011/12/27/%25e9%25a6%2596%25e6%2588%2598%25e8%25a7%2582%25e5%2590%258e%25e6%2584%259f.html</guid>
      <dc:date>2011-12-27T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Fxxk L.A？？</title>
      <link>http://www.rhapsodyn.com/ball/2011/12/26/fxxk-l-a%25ef%25bc%259f%25ef%25bc%259f.html</link>
      <description>&lt;p&gt;明天就是kings vs lakers了，跟往年的感觉完全不一样，几近搞忘&lt;/p&gt;

&lt;p&gt;我的球迷生涯这么快就到头了？&lt;/p&gt;
</description>
      <pubDate>Mon, 26 Dec 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/ball/2011/12/26/fxxk-l-a%25ef%25bc%259f%25ef%25bc%259f.html</guid>
      <dc:date>2011-12-26T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>trick your sister trick</title>
      <link>http://www.rhapsodyn.com/other/2011/12/21/trick-your-sister-trick.html</link>
      <description>&lt;p&gt;asp.net的control在.Net4.0之前不能设定id的模式（ClientIDMode），control在客户端生成的时候由于master等坑爹货存在id会被“污染”，直接用JQuery的&lt;code&gt;$(&amp;quot;#id&amp;quot;)&lt;/code&gt;将选不到id。
stackoverflow上第一篇搜到的帖子有人抛了个trick出来，直接被vote到了前面成了标准答案。
其实。。。。 用&lt;code&gt;$(&amp;quot;*[id=&amp;#39;clientid&amp;#39;]&amp;quot;)&lt;/code&gt;真还不如多加个class专门用来选择&lt;code&gt;$(&amp;quot;.someAdditionalClass&amp;quot;)&lt;/code&gt;。。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsperf.com/asp-net-control-id-selector-vs-class-selector&quot;&gt;http://jsperf.com/asp-net-control-id-selector-vs-class-selector&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ps：在.Net 4.0之前版本和JQuery 1.4版本的时候，可能是最优解了&lt;/p&gt;
</description>
      <pubDate>Wed, 21 Dec 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/12/21/trick-your-sister-trick.html</guid>
      <dc:date>2011-12-21T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>忠义两难全</title>
      <link>http://www.rhapsodyn.com/tech/2011/12/20/%25e5%25bf%25a0%25e4%25b9%2589%25e4%25b8%25a4%25e9%259a%25be%25e5%2585%25a8.html</link>
      <description>&lt;p&gt;难得有时间写点什么，开始起个标题党的题目是我突然发现：把所有业务逻辑都移到一层（BLL Service whatever）似乎会造成性能上无可避免的缺失。后来又想了想，做了下实验，发现（再一次，再N次的发现）：是我自己2了。原因不想细表，也没多大意义，只是为自己经常会有“哇，我有一个反例，我要推翻3层架构了”之类的想法还挺自豪的。。&lt;/p&gt;

&lt;p&gt;前面都是废话无疑，主要是想通过两件小事吐槽一下IE:&lt;/p&gt;

&lt;p&gt;插：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;最后由 rhapsodyn 编辑于 2011年12月16日09:58 &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这尼玛觉得“难得有时间写点什么”完全是错觉啊，再有时间写完草稿的时候peja都退役了
插毕。&lt;/p&gt;

&lt;h3&gt;吐槽点1：&lt;/h3&gt;

&lt;p&gt;在IE中使用ajax去get一个json对象，就算json对象不一样了，返回的httpcode还是304，而在其他浏览器中会是200。即是说，在IE中用get的方式去做ajax请求，只要请求的URL相同，内容是无法刷新的。
解决办法：
换用post去请求&lt;/p&gt;

&lt;h3&gt;吐槽点2：&lt;/h3&gt;

&lt;p&gt;原来IE的盒模型和其他浏览器的盒模型差距挺大的，特别是在有padding的情况下算总大小的时候，具体差别只有调试的时候多换浏览器才能记得起来
解决办法：
浏览器兼容性 == 不遇到不知道到底是不是无解&lt;/p&gt;
</description>
      <pubDate>Tue, 20 Dec 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/12/20/%25e5%25bf%25a0%25e4%25b9%2589%25e4%25b8%25a4%25e9%259a%25be%25e5%2585%25a8.html</guid>
      <dc:date>2011-12-20T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>jq1.7==魂淡</title>
      <link>http://www.rhapsodyn.com/tech/2011/11/08/jq1-7%25e9%25ad%2582%25e6%25b7%25a1.html</link>
      <description>&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//in this example, a click handler will be attached to every table row.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#dataTable tbody tr&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;好吧，click() bind() live()不分了，event handle大统一了，甚至连best practice都广为流传了：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//in this example, the bound element is the tbody, not the tr&amp;#39;s under the tbody.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//the second argument in the .on call is used, in this case, we pass the &amp;quot;tr&amp;quot; selector.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#dataTable tbody&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;tr&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;魂淡，这你叫我肿么炫耀我知道live最效率啊！！！&lt;/p&gt;
</description>
      <pubDate>Tue, 08 Nov 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/11/08/jq1-7%25e9%25ad%2582%25e6%25b7%25a1.html</guid>
      <dc:date>2011-11-08T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>processing.js test</title>
      <link>http://www.rhapsodyn.com/fun/other/tech/2011/10/27/processing-js-test.html</link>
      <description>&lt;canvas id=&quot;cs&quot; width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.rhapsodyn.com/wp-includes/js/processing-1.3.6.min.js&quot;&gt;&lt;/script&gt;&lt;script id=&quot;script1&quot; type=&quot;text/javascript&quot;&gt;// &lt; ![CDATA[
function sketchProc(processing) {  
  // Override draw function, by default it will be called 60 times per second  
  processing.draw = function() {  
    // determine center and max clock arm length  
    var centerX = processing.width / 2, centerY = processing.height / 2;  
    var maxArmLength = Math.min(centerX, centerY);  
    function drawArm(position, lengthScale, weight) {        
      processing.strokeWeight(weight);  
      processing.line(centerX, centerY,   
        centerX + Math.sin(position * 2 * Math.PI) * lengthScale * maxArmLength,  
        centerY - Math.cos(position * 2 * Math.PI) * lengthScale * maxArmLength);  
    }   
    // erase background  
    processing.background(224);   
    var now = new Date();   
    // Moving hours arm by small increments  
    var hoursPosition = (now.getHours() % 12 + now.getMinutes() / 60) / 12;  
    drawArm(hoursPosition, 0.5, 5);   
    // Moving minutes arm by small increments  
    var minutesPosition = (now.getMinutes() + now.getSeconds() / 60) / 60;  
    drawArm(minutesPosition, 0.80, 3);   
    // Moving hour arm by second increments  
    var secondsPosition = now.getSeconds() / 60;  
    drawArm(secondsPosition, 0.90, 1);  
  };      
}  
var canvas = document.getElementById(&quot;cs&quot;);  
// attaching the sketchProc function to the canvas  
var p = new Processing(canvas, sketchProc);
// 

 
虽然没搞懂为啥我400*400的canvas变成100*100了(也许是没重写setup时默认值就是这个效果？懒得实验了，wordpress的html编辑模式要自动插p到代码里，不方便)，但你还是得承认John Resig大神真的太厉害了。。

function sketchProc(processing) {  
  // Override draw function, by default it will be called 60 times per second  
  processing.draw = function() {  
    // determine center and max clock arm length  
    var centerX = processing.width / 2, centerY = processing.height / 2;  
    var maxArmLength = Math.min(centerX, centerY);  
    function drawArm(position, lengthScale, weight) {        
      processing.strokeWeight(weight);  
      processing.line(centerX, centerY,   
        centerX + Math.sin(position * 2 * Math.PI) * lengthScale * maxArmLength,  
        centerY - Math.cos(position * 2 * Math.PI) * lengthScale * maxArmLength);  
    }   
    // erase background  
    processing.background(224);   
    var now = new Date();   
    // Moving hours arm by small increments  
    var hoursPosition = (now.getHours() % 12 + now.getMinutes() / 60) / 12;  
    drawArm(hoursPosition, 0.5, 5);   
    // Moving minutes arm by small increments  
    var minutesPosition = (now.getMinutes() + now.getSeconds() / 60) / 60;  
    drawArm(minutesPosition, 0.80, 3);   
    // Moving hour arm by second increments  
    var secondsPosition = now.getSeconds() / 60;  
    drawArm(secondsPosition, 0.90, 1);  
  };      
}  
var canvas = document.getElementById(&quot;cs&quot;);  
// attaching the sketchProc function to the canvas  
var p = new Processing(canvas, sketchProc);
]]&gt;


</description>
      <pubDate>Thu, 27 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/fun/other/tech/2011/10/27/processing-js-test.html</guid>
      <dc:date>2011-10-27T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>不定参数的存储过程</title>
      <link>http://www.rhapsodyn.com/other/2011/10/26/%25e4%25b8%258d%25e5%25ae%259a%25e5%258f%2582%25e6%2595%25b0%25e7%259a%2584%25e5%25ad%2598%25e5%2582%25a8%25e8%25bf%2587%25e7%25a8%258b.html</link>
      <description>先吐槽一下自己：数据库还是太菜啊。

再说正题：正题就是网上搜一下，csdn有篇文章就有提供完美的解决方案，但是其中isnull()的方案是有bug的，因为sqlserver的null只能用is不能用=判断，所以只能如下操作了：

&amp;nbsp;
&lt;pre lang=&quot;SQL&quot;&gt;
CREATE PROCEDURE PROC_BLAHBLAH
@PRAM1 INT = NULL,
@PRAM2 INT = NULL
AS
BEGIN
SELECT * FROM TBL_BLAHBLAH
WHERE 1=1
   AND (COLUMN1 = @PRAM1 OR @PRAM1 IS NULL)
   AND (COLUMN2 = @PRAM2 OR @PRAM2 IS NULL)
END
&lt;/pre&gt;


</description>
      <pubDate>Wed, 26 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/10/26/%25e4%25b8%258d%25e5%25ae%259a%25e5%258f%2582%25e6%2595%25b0%25e7%259a%2584%25e5%25ad%2598%25e5%2582%25a8%25e8%25bf%2587%25e7%25a8%258b.html</guid>
      <dc:date>2011-10-26T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>不只有document才能ready的！</title>
      <link>http://www.rhapsodyn.com/tech/2011/10/26/%25e4%25b8%258d%25e5%258f%25aa%25e6%259c%2589document%25e6%2589%258d%25e8%2583%25bdready%25ef%25bc%2581.html</link>
      <description>想做一个计算iframe载入耗时的功能，自然会需要对iframe的onload事件做点文章。
然后就发生了一些奇奇怪怪的事情：jquery无法绑定iframe的onload、但直接inline式的写onload=&quot;function(){blahblah}&quot;却有效果：

&lt;a href=&quot;http://jsfiddle.net/rhapsodyn/mk5VE/2/&quot;&gt;http://jsfiddle.net/rhapsodyn/mk5VE/2/&lt;/a&gt;

在so上问了一下，有人回答说是因为jquery绑定的太晚了，也不知道是不是这个原因。（最近是真有想读webkit源代码的冲动，十分的）。

原因没问出来，解决办法倒是找到了——$(&quot;iframe&quot;).ready()完美解决：

&lt;a href=&quot;http://jsfiddle.net/rhapsodyn/mk5VE/3/&quot;&gt;http://jsfiddle.net/rhapsodyn/mk5VE/3/&lt;/a&gt;

就这样吧。。。咱暂时只满足与知其然好了


</description>
      <pubDate>Wed, 26 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/10/26/%25e4%25b8%258d%25e5%258f%25aa%25e6%259c%2589document%25e6%2589%258d%25e8%2583%25bdready%25ef%25bc%2581.html</guid>
      <dc:date>2011-10-26T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>二了 again</title>
      <link>http://www.rhapsodyn.com/tech/2011/10/25/%25e4%25ba%258c%25e4%25ba%2586-again.html</link>
      <description>&lt;a href=&quot;http://jsperf.com/chain-vs-step&quot;&gt;http://jsperf.com/chain-vs-step&lt;/a&gt;
&lt;pre lang=&quot;javascript&quot;&gt;
$target.hide().show;
/*-------------------*/
$target.hide();
$target.show();
&lt;/pre&gt;
为什么我会觉得这两个语句效率有差距。。。。


</description>
      <pubDate>Tue, 25 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/10/25/%25e4%25ba%258c%25e4%25ba%2586-again.html</guid>
      <dc:date>2011-10-25T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>关于input file 的种种</title>
      <link>http://www.rhapsodyn.com/tech/2011/10/20/input-typefile.html</link>
      <description>又是前段时间想写没写完的文，尽量简单的来写，最好不要more标签
&lt;h5&gt;FileUpload limitations by iis&amp;amp;asp.net&lt;/h5&gt;

&lt;hr /&gt;

首先，iis7的服务器限制了请求包的最大大小为30M、而asp.net2.0应用也在webconfig中httpruntime节点中限制了maxrequestlength，如果需要在asp.net+iis7的应用中上传大文件，需要更改这两处设置
&lt;h5&gt;FileUpload limitations by browser&lt;/h5&gt;

&lt;hr /&gt;

每个浏览器对上传文件安全性的限制都不同，IE系列的浏览器不允许以script的方式点击上传按钮上传文件（$(&quot;input:file&quot;).click()是无效的），而chrome则不允许在页面中放置display：none的file（用javascript去触发其事件也无效）
&lt;h5&gt;FileUpload asynly&lt;/h5&gt;

&lt;hr /&gt;

ajax都是利用xmlhttprequst，而xmlhttprequst的创建和使用是javascript的工作，javascript出于安全性不能访问本地文件。so：完全依赖js和html的异步上传是不可能的。（一些异步上传的插件都是基于flash实现的，其实这个想法（异步上传）挺不靠谱的，&lt;a href=&quot;http://stackoverflow.com/questions/7595049/why-cant-i-upload-files-asynchronously&quot;&gt;http://stackoverflow.com/questions/7595049/why-cant-i-upload-files-asynchronously&lt;/a&gt;）
&lt;h5&gt;FileUpload multiple style only way&lt;/h5&gt;

&lt;hr /&gt;

最后，想要实现像各种邮箱那样动态添加附件（添加不限数目的控件），其实只有一种方法（非html5条件下）：css hack =.=，虽然极度厌恶各种css2的hack，但除了把很多个input file一个一个的叠在一起（用postion:absolute和position控制，每点一个就多一个file叠在上面。后台需要多个判断，看每个file的length是不是等于0，等于0的话就是点击了上传但是取消了选择框或者是最后多出来的那个。。）以外，还真没有其他方法了。&lt;strong&gt;HTML5快点rock the world啊&lt;/strong&gt;

&amp;nbsp;


</description>
      <pubDate>Thu, 20 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/10/20/input-typefile.html</guid>
      <dc:date>2011-10-20T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>直觉神马的不可靠啊</title>
      <link>http://www.rhapsodyn.com/tech/2011/10/10/instinct-is-not-reliable.html</link>
      <description>find('a')+find('b')要比find('a,b')快思密达，真相见下：

&lt;a href=&quot;http://jsperf.com/find-a-b-vs-find-a-find-b&quot;&gt;http://jsperf.com/find-a-b-vs-find-a-find-b&lt;/a&gt;

然后stackoverflow的大神解析的真相背后的故事见下：

&lt;a href=&quot;http://stackoverflow.com/questions/7712850/finda-b-is-slower-than-findafindb-why&quot;&gt;http://stackoverflow.com/questions/7712850/finda-b-is-slower-than-findafindb-why&lt;/a&gt;


</description>
      <pubDate>Mon, 10 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/10/10/instinct-is-not-reliable.html</guid>
      <dc:date>2011-10-10T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Chrome你赢了</title>
      <link>http://www.rhapsodyn.com/tech/2011/10/02/chrome-wins.html</link>
      <description>chrome14以后的版本，F12就可以打开开发人员工具，而不是只有Ctrl+Shift+i。

至此，chrome开发人员工具完爆FireBug（版本超多，样式丑）和IE开发人员工具（调试javascript的时候必须将调试窗口独立弹出）。

chrome开发人员工具满塞


</description>
      <pubDate>Sun, 02 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/10/02/chrome-wins.html</guid>
      <dc:date>2011-10-02T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>input name</title>
      <link>http://www.rhapsodyn.com/tech/2011/09/29/input-name.html</link>
      <description>平时不是用webform的控件就是用htmlhelper，再不然就jquery.ajax加上$(&quot;#id&quot;).val()了，早就搞忘了input还有个属性叫name。

今天想做个不用控件上传的功能（当然也不用mvc），发现打死后台用request.files找不到货，还以为是&amp;lt;input type=&quot;file&quot;&amp;gt;的问题，后来把form的enctype改成&quot;multipart/form-data&quot;了还是不能解决问题。

又是一番瞎搞。

最后用chrome的开发工具监视网络的时候发现：某个input的name没有指定的时候，form在传到post到后台的时候根本就不会带上那个input！

-.- 囧的一塌糊涂


</description>
      <pubDate>Thu, 29 Sep 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/09/29/input-name.html</guid>
      <dc:date>2011-09-29T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>嗯，嗯，嗯</title>
      <link>http://www.rhapsodyn.com/other/2011/08/23/en-en-en.html</link>
      <description>&lt;blockquote&gt;浏览器支持

所有主流浏览器都支持 width 属性。

注释：任何版本的 Internet Explorer （包括 IE8）都不支持属性值 &quot;inherit&quot;。&lt;/blockquote&gt;


</description>
      <pubDate>Tue, 23 Aug 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/08/23/en-en-en.html</guid>
      <dc:date>2011-08-23T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>IIS7 Win7 ASP.NET MVC</title>
      <link>http://www.rhapsodyn.com/other/2011/07/21/iis7-win7-asp-net-mvc.html</link>
      <description>亲，Win7+iis7记得要everyone哦。（我是真不想吐槽Win7的管理员模式神马的了）
亲，MVC部署记得要Copy To Local哦。（高效的各种代价）
&lt;h5&gt;EDIT：&lt;/h5&gt;
事实证明，iis6远比iis7更x疼：

先要全局都用asp_isapi来处理（效率，效率你妹啊），接下来，如果你装了.NET4.0，4.0还会自作多情的帮你路由（对MVC的无后缀路径）生成一些奇奇怪怪的路径，你还需要手动在注册表里禁用了4.0的EnableExtensionlessUrls。

所以，要用ASP.NET MVC，还是用winserver2008+iis7.0吧~


</description>
      <pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/07/21/iis7-win7-asp-net-mvc.html</guid>
      <dc:date>2011-07-21T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>关于tassadarliu的一切</title>
      <link>http://www.rhapsodyn.com/tech/2011/07/20/all-about-tassadarliu.html</link>
      <description>是在想不到用神马标题来吐槽了，现在这个应该算得上是小清新+碉堡了


我没有用lxx，没有用rhapsodyn，用的是tassadarliu，其实只有两个星期而已，但我还是半强迫半主动的承认自己tassadarliu这一重身份了。于是，那个中午一听LP就睡着的成了tassadarliu，晚上入睡速度*=old入睡速度（入睡速度*=3//bug fixed by tassadarliu@7.20）的是tassadarliu，当然，肾上腺一分泌过剩就觉得自己回到了很多很多年以前的那个lxx跑去表白被一张好人卡拍在脸上的也是tassadarliu没错


突然顿悟写博文其实就是把所有文章都压倒了一个名字叫“嗯嗯我知道自己有很多东西要写但是开一个头就不知道怎么写了还是存为草稿好了反正总会有天会写完其实永远也写不完”的stack里，越是压在栈底的写完的几率越小，现在我的stack里有《主流浏览器调试工具评测》《东成西就完爆东邪西毒》《不说不代表我知道》，嗯，现在越发感觉它们除了作为数据库冗余以外也只能以标题的形式出现在post里了


我讨厌微博的一个原因是微博本质上就是spam，而且是能杀死大量太母的spam。另一个就是微博限制140字（这个我也想吐槽，人家twitter限制140字是人家短信一条就能发140个，新浪腾讯神马为什么不把字数限定到跟短信一样？神马？你说其实是移动太坑爹了？少年你知道的太多了），很大程度上让人们（当然包括渺小的我）越来越不会写东西，所以我有什么都想写成博文，但是似乎上面一个li已经说过了我已经堆了很多没写完了，但是我这篇博文也是一小段一小段没关联的再写啊


$(this).prev(li)中的两个但是用的很好，但是有时候太有用了，把自己逼太急的时候记得用但是给自己找借口


这个wordpress的theme的ul的css样式真是弱爆了（我还是看不下去把格式清除了），你（我真不知道该怎么用人称代词了）觉得我会去改吗？会吗？不会吗？（原来我还会用“会吗？不会吗？”，嗯嗯，zhuangbility功力尚在啊）


桌子上放了一本《悟空传》，感觉我离那段每半年读一次《悟空传》的时光好远好远。到现在，只剩下了两个印象——1.大圣独孤的一人去战全宇宙的背影太帅了；2.我要这天在遮不了我眼，我要这地再藏不了我心，我要众生都明白我意，我要诸佛都烟消云散


拍在脸上也要继续上的


</description>
      <pubDate>Wed, 20 Jul 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2011/07/20/all-about-tassadarliu.html</guid>
      <dc:date>2011-07-20T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>说好的，三天搞定论文呢</title>
      <link>http://www.rhapsodyn.com/other/2011/05/05/hard-to-fuck-essay-within-3-day.html</link>
      <description>其实只是吐槽罢了。

嗯，当时就是这样。

写论文这种正儿八经、文绉绉的文章太累人累蛋了，草稿里还存了两篇文章没补完，不知道要拖到什么时候去了。


</description>
      <pubDate>Thu, 05 May 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/05/05/hard-to-fuck-essay-within-3-day.html</guid>
      <dc:date>2011-05-05T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>哟IE9，真是款好浏览器啊！</title>
      <link>http://www.rhapsodyn.com/other/2011/04/28/ie9-what-a-good-explorer.html</link>
      <description>两个DOM元素，一个#A一个#B，#A在前，#B在后。#A的float：none，#B的float：right，猜猜会发生什么，#B自动换行了！！！#B升华了！！#B他不是一个人（一个行）！！！（btw：FF和Chrome完全正常）

要想把#B和#A拉回到同一行，两个方法：1.把#B摆到#A前面去 2.把#A加上float：left

好吧，如此bra气的fix，也只有在ie上看得到了（ie6各种xx也就行了，你可是ie9啊。。。。。）


</description>
      <pubDate>Thu, 28 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/04/28/ie9-what-a-good-explorer.html</guid>
      <dc:date>2011-04-28T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>fxxk iframe</title>
      <link>http://www.rhapsodyn.com/other/2011/04/27/fxxk-iframe.html</link>
      <description>这网页内容越来越多，过去一个10000000多行代码，麻烦！现在好了，有了iframe，一个网页顶过去五个，又难写，又难看，速度还超慢，不解释！最重要的你辛辛苦苦写的javascript啊css啊还都失效了，既然过时了就去死好吗，混蛋！（看妹啊，IE6顺便骂的就是你）


</description>
      <pubDate>Wed, 27 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/04/27/fxxk-iframe.html</guid>
      <dc:date>2011-04-27T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>$.click vs $.live(click)</title>
      <link>http://www.rhapsodyn.com/exp/2011/04/21/click-vs-liveclick.html</link>
      <description>以前用JQuery习惯的方式就只是
&lt;pre lang=&quot;javascript&quot;&gt;$(document).ready(function(){
    $(&quot;.someClass&quot;).click(function(){
        //do sth
    });
});&lt;/pre&gt;
而且很傻很天真的就只会这样给某些元素绑定事件处理函数，一度认为“一招鲜吃遍天”，这招简直可以解决所有前端事件响应问题了。


</description>
      <pubDate>Thu, 21 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/exp/2011/04/21/click-vs-liveclick.html</guid>
      <dc:date>2011-04-21T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>坑爹的M$</title>
      <link>http://www.rhapsodyn.com/exp/2011/04/13/ms-cheating-father.html</link>
      <description>虽然我是伪M$粉，我还是无法无视M$的种种坑爹行径。

这几天遇到的坑爹事故太多，还是可以适当无规律无时序吐吐槽的。

天字号第一吐，要吐就吐win7下的visual studio，要不是这么坑爹的状况，我还不知道win7可以“右键——以管理员身份运行”呢。这是神马个设定？完全就是出于安全性的考虑吗？考虑安全性你就干脆不要给普通用户这么个选项啊。而且，此限制还可以秒杀一切在管理员组下的用户。至于不以管理员身份运行visual studio的后果吗，用千奇百怪百花齐放万紫千红总是春来形容应该不算太过分吧。所以遇到类似“千奇百怪百花齐放万紫千红总是春”的问题，先想想你运行visual studio的方式吧，或者，一装完vs就马上更改它的兼容性属性吧~


</description>
      <pubDate>Wed, 13 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/exp/2011/04/13/ms-cheating-father.html</guid>
      <dc:date>2011-04-13T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>What's up man??</title>
      <link>http://www.rhapsodyn.com/other/2011/04/05/whats-up-man.html</link>
      <description>作为半个M$粉，突然想吐槽（aka：狂喷）M$的各种产品是神马状况？？

作为老资历熬夜党，突然发现过了12点就完全不行了是神马状况？？

作为悲观主义者中最乐观的那一类型，租个房子就租的心力憔悴又是神马状况？？

作为中国最可怜的球迷群体（王蜜）中的一员，我王连胜3场，N战N-1或者N-2胜我丝毫不知情知情了也完全不高兴又是神马个状况？？

作为生活严谨认真的成年人，晚上11点+了买夜宵再加酒精饮料那就是完全理解不能的状况了。

What‘s up man？？ 这是你最期待的战斗啊！！！！！！


</description>
      <pubDate>Tue, 05 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/04/05/whats-up-man.html</guid>
      <dc:date>2011-04-05T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>What's before &quot;the next&quot;</title>
      <link>http://www.rhapsodyn.com/other/2011/03/25/whats-before-the-next.html</link>
      <description>OK，在“what's next”的“next”之前还是有点东西想写。

某T公司真是一个充满了吐槽点的公司，我喜欢。

某圳真是一个很不错的城市，气候，感觉，伙食都很给力；但是还是成都比较适合安家。。。。。。吧？ 少不入川？少不出川？少不XX？

某人还是会无征兆无天候无buff状态狂想吐槽狂想装忧郁狂想XX，庄周，opeth，村上春树我爱你们


</description>
      <pubDate>Fri, 25 Mar 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/03/25/whats-before-the-next.html</guid>
      <dc:date>2011-03-25T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>What's next</title>
      <link>http://www.rhapsodyn.com/other/2011/03/13/whats-next.html</link>
      <description>两个多月没玩blog，用冠冕堂皇一点的借口来说就是——“只有在那种一般忙或者一般闲的状态下才会有心情写博文，而恰好前&lt;em&gt;[两个多月 - 两个星期]&lt;/em&gt;时间是超级闲，这&lt;em&gt;[lasted两个星期]&lt;/em&gt;又是超级忙”。但转念一想，一直不用这不是浪费钱吗，劳资花钱买的服务器流量全被spam用了。不行，还是得写点东西。

写什么好呢？能写的当然多，想写的，或者说最想写的就是这两个星期以来一些关于多线程和async-io编程方面的感悟了。

（ps：WordPress太无敌了，ctrl+s竟然是保存草稿！！！！）

大纲如下（其实只是个list......）
&lt;ul&gt;
	&lt;li&gt;啥是async-io&lt;/li&gt;
	&lt;li&gt;async-io遇到多线程会擦出什么火花&lt;/li&gt;
	&lt;li&gt;渐近式的sample&lt;/li&gt;
	&lt;li&gt;线程安全&lt;/li&gt;
	&lt;li&gt;socket.is_open()&lt;/li&gt;
&lt;/ul&gt;


</description>
      <pubDate>Sun, 13 Mar 2011 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2011/03/13/whats-next.html</guid>
      <dc:date>2011-03-13T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>CC2读书笔记（2）</title>
      <link>http://www.rhapsodyn.com/tech/2010/12/01/reading-notes-into-cc2-two.html</link>
      <description>&lt;ol&gt;
	&lt;li&gt;


&lt;blockquote&gt;PIMPL&lt;/blockquote&gt;
这是一个指针拯救世界的例子，这是一个开始看过很多次都以为懂了后来StackOverflow有人说到假装懂了最后知道现在才真正理解的例子。
其实就是java中的package，c#中的assembly罢了。（虽然不怎么恰当，恩，十分不恰当。但意思是对的，就是为了实现更高层次（高于private、public）的信息隐藏罢了）
但对每个外部要使用的类都去做“声明—实现”，都多写一个长得差不多的类，实在是麻烦的可以。可见，语言级别的支持怎么要比纯技术上的Tricks优雅不少。
&lt;/li&gt;
	&lt;li&gt;


&lt;blockquote&gt;public继承是“is-a”关系&lt;/blockquote&gt;
也是看到过sighed int次的东西了，不过在午后的zhuangbility的阳光的照射下，我悟出一些很小资的真理：往往你找不到单一的验证一定正确的准则，却存在无数条可以指明一定错误的准则，但介于人类无法一一对照完无限条判错准则，所以你只能保证某事物在一定程度上的非错误性。
&lt;/li&gt;

	&lt;li&gt;


&lt;blockquote&gt;Pontiac Aztek&lt;/blockquote&gt;
作者对这车的怨念到底有多深啊。。。。。。。
&lt;img alt=&quot;&quot; src=&quot;http://www.rhapsodyn.com/wp-content/uploads/2010/12/1008160120080814_1.gif.jpeg&quot; title=&quot;pz&quot; class=&quot;alignnone&quot; width=&quot;500&quot; height=&quot;357&quot; /&gt;

&lt;/li&gt;


&lt;/ol&gt;



</description>
      <pubDate>Wed, 01 Dec 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2010/12/01/reading-notes-into-cc2-two.html</guid>
      <dc:date>2010-12-01T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>CC2读书笔记（1）</title>
      <link>http://www.rhapsodyn.com/tech/2010/11/30/reading-notes-into-cc2.html</link>
      <description>&lt;ol&gt;
	&lt;li&gt;
&lt;blockquote&gt;世界即隐喻&lt;/blockquote&gt;
类比才是解释事物或者概念的最好方法，就像书中引用爱因斯坦大神的名言一样——“如果你不能给一个六岁的孩子讲明白，说明自己还没有理解”，话说回来，能将任意概念都翻译成六岁孩子都能熟知的另一概念，也只有大神能做到了。（我知道这是夸张，don't be so serious）&lt;/li&gt;
	&lt;li&gt;
&lt;blockquote&gt;programming in a language VS programming into a language&lt;/blockquote&gt;
没有最好的语言，只有最适合的语言。没有最适合的语言，只有最into（aka 熟悉，顺手）的语言。
Ruby好，Ruby秒，Ruby开发web应用呱呱叫。但如果你像我一样无法100%sure应以Ruby的函数的时候要不要写def的话，老老实实用你的PHP吧。
熟悉才能相处，into才能有好结果，恩，有道理。&lt;/li&gt;
	&lt;li&gt;


&lt;blockquote&gt;当我解决问题的时候，我从来不考虑美感。我只想着如何才能解决它。但一旦解决了问题，如果解决方法不够优美的话，我就知道做错了。—— R. Buckminster Fuller&lt;/blockquote&gt;
文章本天成，妙手偶得之。不刻意追求的美感才是真正的美感。对于软件来说，真正的美感类似于：复杂性无处不在，却又井井有条。

&lt;/li&gt;
&lt;/ol&gt;


</description>
      <pubDate>Tue, 30 Nov 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2010/11/30/reading-notes-into-cc2.html</guid>
      <dc:date>2010-11-30T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>有关与3娃会晤以及其重要讲话的记录以及其他</title>
      <link>http://www.rhapsodyn.com/other/2010/11/14/about-blah-blah-blah.html</link>
      <description>标题党永远都是标题党，就算还有两年多一点点就世界末日了也还是标题党。



</description>
      <pubDate>Sun, 14 Nov 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2010/11/14/about-blah-blah-blah.html</guid>
      <dc:date>2010-11-14T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>R.I.P</title>
      <link>http://www.rhapsodyn.com/other/2010/11/03/r-i-p.html</link>
      <description>

</description>
      <pubDate>Wed, 03 Nov 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2010/11/03/r-i-p.html</guid>
      <dc:date>2010-11-03T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>select * from priorityList order by priorityValue</title>
      <link>http://www.rhapsodyn.com/other/2010/10/11/prioritylist.html</link>
      <description>&lt;ul&gt;
	&lt;li&gt;火力全开 on NoB&lt;/li&gt;
	&lt;li&gt;各种请吃饭，继续攒rp&lt;/li&gt;
	&lt;li&gt;code complete&lt;/li&gt;
	&lt;li&gt;蛋定&lt;/li&gt;
&lt;/ul&gt;


</description>
      <pubDate>Mon, 11 Oct 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2010/10/11/prioritylist.html</guid>
      <dc:date>2010-10-11T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>这个JS好玩的过分了。。。。</title>
      <link>http://www.rhapsodyn.com/fun/2010/10/08/funny-js.html</link>
      <description>&lt;h3&gt;&lt;a href=&quot;javascript:var%20s%20=%20document.createElement('script');s.type='text/javascript';document.body.appendChild(s);s.src='http://erkie.github.com/asteroids.min.js';void(0);&quot;&gt;Kick Ass&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
	&lt;li&gt; * “左右方向键控制方向”&lt;/li&gt;
	&lt;li&gt;* “上方向键控制前进”&lt;/li&gt;
	&lt;li&gt;* “空格射击”&lt;/li&gt;
	&lt;li&gt;* “B键查看有什么东西可以被射击”&lt;/li&gt;
	&lt;li&gt;* “Esc键退出”&lt;/li&gt;
&lt;/ul&gt;
（直接猛击就能看到效果了，在我的Blog上运行很卡，正在研究是什么原因，建议通过传送门去作者主页看）

&lt;a href=&quot;http://erkie.github.com/&quot;&gt;作者网页&lt;/a&gt;


</description>
      <pubDate>Fri, 08 Oct 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/fun/2010/10/08/funny-js.html</guid>
      <dc:date>2010-10-08T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>巧合</title>
      <link>http://www.rhapsodyn.com/fun/2010/10/08/coincidence.html</link>
      <description>前段时间研究WordPress的时候遇到的一件趣事。

刚刚突然地想起了，就仔细Google了一下，发现只是个巧合而已。

好吧，这个巧合是这样滴：有款帮助作者高亮代码的php插件（就是像IDE一样highlight关键字符号等等，但你在写html的时候不需要手动去&lt;color&gt;之类的）名字叫做—— &lt;strong&gt;GeSHi&lt;/strong&gt;，我知道你明显和我一样第一反应就是“格式”。
But it turns out： &lt;strong&gt;GeSHi&lt;/strong&gt; = Generic Syntax Highlighter

世界真奇妙。


</description>
      <pubDate>Fri, 08 Oct 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/fun/2010/10/08/coincidence.html</guid>
      <dc:date>2010-10-08T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>string iterator not dereferencable</title>
      <link>http://www.rhapsodyn.com/tech/2010/09/28/string-iterator-not-dereferencable.html</link>
      <description>其实这个runtime error的原因不一定就是程序对iterator的操作不当造成的。

还有可能是string对象已经unavailable了。
比如说：



</description>
      <pubDate>Tue, 28 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2010/09/28/string-iterator-not-dereferencable.html</guid>
      <dc:date>2010-09-28T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>香，是可以两头一起点的</title>
      <link>http://www.rhapsodyn.com/fun/2010/09/27/two-fragrance.html</link>
      <description>&lt;h6&gt;Question：&lt;/h6&gt;
有两根不均匀分布的香，香烧完的时间是一个小时，你能用什么方法来确定一段15分钟的时间？



</description>
      <pubDate>Mon, 27 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/fun/2010/09/27/two-fragrance.html</guid>
      <dc:date>2010-09-27T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>C++ trap</title>
      <link>http://www.rhapsodyn.com/tech/2010/09/22/c-trap.html</link>
      <description>简单说来就是“c++类里成员变量的初始化顺序不是按照成员初始化列表的顺序，而是按照在类里声明的顺序来的”
这也太不合逻辑了（非C++程序员的逻辑），果然c++难用啊

（Effective C++里就有写，我还看了两遍的书，搞毛啊。。。 &lt;a href=&quot;http://www.kuqin.com/effectivec2e/ch03d.htm&quot;&gt;LINK&lt;/a&gt;）


</description>
      <pubDate>Wed, 22 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2010/09/22/c-trap.html</guid>
      <dc:date>2010-09-22T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>爱情，一天两夜</title>
      <link>http://www.rhapsodyn.com/other/2010/09/19/love-is-one-day-and-two-night.html</link>
      <description>（刀大《爱情，两好三坏》“读后感”）
&lt;h6&gt;起因：&lt;/h6&gt;
&lt;hr /&gt;

其实，每个故事都应该由“这便是开始”开始，再以“这便是结束”来结束。
这便是开始。

公交车门关上的时间，应该是两秒钟吧。
他用了两秒钟时间，思考了过去二十秒钟内发生的一切：


</description>
      <pubDate>Sun, 19 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2010/09/19/love-is-one-day-and-two-night.html</guid>
      <dc:date>2010-09-19T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>又是一年前瞻时，千树万树菊花开（1）</title>
      <link>http://www.rhapsodyn.com/ball/2010/09/16/kings-preview-1.html</link>
      <description>如果你是一个国王球迷，那么你一年中最兴奋的事情肯定是&lt;strong&gt;Beat LA&lt;/strong&gt;了。
如果你是一个05年以后还在支持国王的球迷，那么你一年当中的兴奋点就会加上选秀的前夕，去掉季后赛。
如果你是一个热爱主队的NBA球迷，那么你会感到兴奋的时候就不会少了赛季将至的前瞻了。
因为乐观点，&lt;strong&gt;没来的都算是希望&lt;/strong&gt;。作为一个乐观的国王球迷，你可以在前瞻时一边幻想着新秀多么威武，一边幻想着今年怎么干死LA，还顺带YY离季后赛的距离是怎样一步步逼近的。带点悲观情绪的说，赛季初——唯一能满足上面三个如果的时刻——才是王蜜最好的时刻。
珍惜这时刻。

</description>
      <pubDate>Thu, 16 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/ball/2010/09/16/kings-preview-1.html</guid>
      <dc:date>2010-09-16T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>语 言 黑 帮</title>
      <link>http://www.rhapsodyn.com/fun/tech/2010/09/14/gang-of-programming-language.html</link>
      <description>（灵感来自于前段时间的&lt;a href=&quot;http://www.rhapsodyn.com/index.php/2010/09/02/oop-whos-happiness/&quot;&gt;文章中的某个比喻&lt;/a&gt;）

编程语言永远都是程序员世界里的&lt;strong&gt;G点&lt;/strong&gt;，只要有人敢碰，就绝对有人陪你吵到高潮。不为别的，因为作为一个程序员，不选门语言作为信仰你简直不好意思出去跟人家打招呼。信仰这东西，信久了难免就当真了，然后就有了血肉，精气神一个不差站在你旁边跟你称兄道弟了。有人指名道姓说你兄弟的不好了，你当然会用各种文明用语招呼过去啊。所以，各种为了编程语言吵到骂娘的，我都表示可以理解……

不过我的地盘听我的，G点我也敢碰，编程语言我也可以扯，还跟黑涩会一起扯。

&lt;strong&gt;Watch out&lt;/strong&gt;，穿黑衣的型男一个个地走从豪华轿车里走出来了——

</description>
      <pubDate>Tue, 14 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/fun/tech/2010/09/14/gang-of-programming-language.html</guid>
      <dc:date>2010-09-14T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>我错怪了你，曾哥</title>
      <link>http://www.rhapsodyn.com/fun/2010/09/09/sorry-mr-zeng.html</link>
      <description>原本，我以为曾哥“&lt;a href=&quot;http://www.douban.com/group/topic/7896766/&quot; target=&quot;_blank&quot;&gt;世界上另一个的我&lt;/a&gt;”的论调除了向&lt;a href=&quot;http://baike.baidu.com/view/279788.htm?fr=ala0_1_1&quot; target=&quot;_blank&quot;&gt;NANA&lt;/a&gt;致敬以外就只有恶心人的用途了，但是今天……
&lt;h6&gt;今天搜到的一段代码：&lt;/h6&gt;


</description>
      <pubDate>Thu, 09 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/fun/2010/09/09/sorry-mr-zeng.html</guid>
      <dc:date>2010-09-09T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>梦</title>
      <link>http://www.rhapsodyn.com/other/2010/09/07/dream.html</link>
      <description>看了《盗梦空间》，真的很不错，构思了半天，发现我始终没有成为一个&lt;a href=&quot;http://movie.douban.com/subject/3541415/&quot; target=&quot;_blank&quot;&gt;豆瓣青年&lt;/a&gt;的潜力，影评什么的，我写不来啊。
我只写，&lt;strong&gt;梦&lt;/strong&gt;。
梦，到底是什么？
&lt;blockquote&gt;梦是一种主体经验，是人在睡眠时产生想像的影像、声音、思考或感觉，通常是非自愿的-wiki&lt;/blockquote&gt;


</description>
      <pubDate>Tue, 07 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2010/09/07/dream.html</guid>
      <dc:date>2010-09-07T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>面向对象，是谁的幸福？</title>
      <link>http://www.rhapsodyn.com/tech/2010/09/02/oop-whos-happiness.html</link>
      <description>心血来潮，花了一下午读了一下&lt;em&gt;&lt;a href=&quot;www.shiqi.cc&quot; target=&quot;_blank&quot;&gt;石器时代&lt;/a&gt;&lt;/em&gt;的源代码。

没事读个这么老的游戏的源代码干吗？恩，&lt;strong&gt;前因&lt;/strong&gt;是：我最近正在玩一个石器时代的私服（ps：not ashamed to tell you: 石器时代是我玩的第一款网游，也是一直以来我觉得最好玩的网游），然后又顺手Google了一份源代码，就不免有些邪恶的念头————看能不能从中读点什么出来（比如一些伪随机到底有多&quot;伪&quot;，能不能有大把握拿极品等等）。然后，&lt;strong&gt;后果&lt;/strong&gt;是：我想要读的东西一点都没读出来，读懂了的，尽是些无关紧要的东西。最后，感想是：&lt;strong&gt;完败&lt;/strong&gt;。


</description>
      <pubDate>Thu, 02 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2010/09/02/oop-whos-happiness.html</guid>
      <dc:date>2010-09-02T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>对不起，我是FF控</title>
      <link>http://www.rhapsodyn.com/tech/2010/08/30/sorry-i-am-a-firefoxcon.html</link>
      <description>&lt;h2&gt;FF = Final Fantasy&lt;/h2&gt;
最终幻想，毫无疑问的，日式RPG的最强之作。关于最终幻想，有太多的话题可以写。7代的震撼，8代的遗憾，9代的梦幻，那都是我游戏生涯中无法绕过去的回忆。

但今天要写的猪脚并不是最终幻想，因为除了最终幻想，我生活中的另一挚爱也叫FF，只不过……
&lt;h2&gt;FF = Firefox&lt;/h2&gt;
First of all，想要打击各位火星人的是：firefox它，它&lt;strong&gt;不是狐狸&lt;/strong&gt;口牙，&lt;a href=&quot;http://creativebits.org/firefox/firefox_is_not_a_fox&quot; target=&quot;_blank&quot;&gt;他是……&lt;/a&gt;

</description>
      <pubDate>Mon, 30 Aug 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/tech/2010/08/30/sorry-i-am-a-firefoxcon.html</guid>
      <dc:date>2010-08-30T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>谢谢你，岩石哥</title>
      <link>http://www.rhapsodyn.com/other/2010/08/28/thankyou-bro-rock.html</link>
      <description>思前想后，感触颇多。

一来体会不好表达，二来这也算是我private的财富。

所以能写的也只有这么多：
一杯水，一件T，一席话，&lt;strong&gt;谢谢你，岩石哥！&lt;/strong&gt;


</description>
      <pubDate>Sat, 28 Aug 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2010/08/28/thankyou-bro-rock.html</guid>
      <dc:date>2010-08-28T00:00:00+00:00</dc:date>
    </item>
    <item>
      <title>Hello World</title>
      <link>http://www.rhapsodyn.com/other/2010/08/27/hello-world-2.html</link>
      <description>从6月份有搞个Blog的想法到8月实习完了纠纠结结买完主机域名，再到“超高效率”的两星期备案，再到拖拖沓沓才开始研究WordPress

现在，终于，finally，eventually

&lt;strong&gt;Hello World！！！&lt;/strong&gt;


</description>
      <pubDate>Fri, 27 Aug 2010 00:00:00 +0000</pubDate>
      <guid>http://www.rhapsodyn.com/other/2010/08/27/hello-world-2.html</guid>
      <dc:date>2010-08-27T00:00:00+00:00</dc:date>
    </item>
    <dc:date>2014-07-30T00:00:00+00:00</dc:date>
  </channel>
</rss>